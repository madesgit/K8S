

7397333855




Epic_Feature_Workflow_8_2_17  --- EPIC 

Scrum_Revised_Draft_010318 ---story 


main wf = HAN: Software Simplified Workflow Scheme


apt-get update
apt-get install openssh-server


vi /etc/hostname
vi /etc/hosts

Add host only adapter 

vi /etc/network/interfaces

#configure enp0s8
auto enp0s8
iface enp0s8 inet static 
     address 192.168.56.2 
     netmask 255.255.255.o


apt-get install     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

apt-key fingerprint 0EBFCD88

 add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"


apt-get update
apt-get install docker-ce=18.06.3~ce~3-0~ubuntu

apt-cache madison docker-ce-cli
apt-get install docker-ce-cli=5:18.09.3~3-0~ubuntu-bionic
apt-get install containerd.io



2.Install Kubeadm

apt-get update && apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
apt-get update
apt-get install -y kubelet kubeadm kubectl
apt-mark hold kubelet kubeadm kubectl

3.Configure Kubectl cluster: 

swapoff -a

kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address=192.168.56.2


4.Add nodes 

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 192.168.56.2:6443 --token 7u33t2.wo8t6l3b9ptj599j \
    --discovery-token-ca-cert-hash sha256:19aad276be29841ee8e1222666212668ca61871ca9fef60d0ae6370657e7e474
root@kubemaster:~#


5. Create POD network 

for calico : 

kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml
kubectl get pods --all-namespaces

6.Add nodes :(only on worker nodes)

kubeadm join 192.168.56.2:6443 --token 7u33t2.wo8t6l3b9ptj599j \
    --discovery-token-ca-cert-hash sha256:19aad276be29841ee8e1222666212668ca61871ca9fef60d0ae6370657e7e474





